package Entite;
import Main.*;

import java.util.Random;
import java.awt.Color;
import java.awt.Graphics2D;

public class Ennemi2 implements Entite {
	
	public Jeu jeu;
	public int pdv;
	private boolean vivant;
	private int x;
	private int y;
	private Direction direction;
	public final static int vitesse = 1;
	public int dir;
	public Random r;
	
	private int update;
	
	public Ennemi2(Jeu jeu, int x, int y) {
		this.jeu = jeu;
		this.pdv = 3;
		this.vivant = true;
		this.x = x;
		this.y = y;
		this.r = new Random();
		this.dir = getRandomNumberInRange(1, 4);
		switch(dir) {
			case 1 : direction = Direction.HAUT;
			case 2 : direction = Direction.BAS;
			case 3 : direction = Direction.GAUCHE;
			case 4 : direction = Direction.DROITE;
		}
	}
	
	@Override
	public int getX() { return this.x; }
    
	@Override
    public int getY() { return this.y; }


	@Override
	public boolean estPresent() {
		return vivant;
	}

	@Override
	public void afficher(Graphics2D g) {
		g.setColor(Color.black);
		g.fillRect(x, y, jeu.tailleCaseReelle, jeu.tailleCaseReelle);
		
	}

	@Override
	public void miseAJour() {
		if (update >= 100) {
			update = 0;
			dir = getRandomNumberInRange(1,5);
		} else if (update >= 50) {
			dir = 0;
		}
		switch(dir) {
		case 1 :
			this.x += vitesse;
			update += 1;
			direction = Direction.DROITE;
			break;
		case 2 :
			this.y += vitesse;
			update += 1;
			direction = Direction.BAS;
			break;
		case 3 :
			this.x -= vitesse;
			update += 1;
			direction = Direction.HAUT;
			break;
		case 4 :
			this.y -= vitesse;
			update += 1;
			direction = Direction.GAUCHE;
			break;
		default :
			update += 1;
		}
		
	}
	
	private int getRandomNumberInRange(int min, int max) {
		return r.nextInt(max - min) + min;
	}

	public Direction getDirection() {
		return this.direction;
	}
	
}